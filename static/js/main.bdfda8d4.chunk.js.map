{"version":3,"sources":["components/fetchData.js","components/ErrorMessage.js","components/Endpoint.js","components/InputLabel.js","components/NodeRender.js","components/findInputType.js","components/MembersContainer.js","components/TreeRender.js","App.js","index.js"],"names":["a","fetch","mode","response","json","Error","ErrorMessage","error","className","message","Endpoint","backgroundColorClass","memberName","memberDescription","id","InputLabel","inputType","labelId","labelText","htmlFor","icon","faPlus","faMinus","NodeRender","parentLabel","groupName","groupMembers","groupId","groupDescription","type","name","MembersContainer","members","findInputType","groupType","membersContainer","map","member","description","inputTypeValue","TreeRender","tree","descriptionContainer","App","useState","errorMessage","setError","undefined","listTree","setListTree","useEffect","fetchData","then","catch","handleError","color","height","width","timeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdfda8d4.chunk.js","sourcesContent":["export default  async function fetchData() {\n    const response = await fetch('./data-tree.json', \n        {\n            mode: 'cors',\n        });\n    try {\n        return await response.json();\n    } catch {\n        throw Error('Error fetching data.');\n    }\n}\n\n","export default function ErrorMessage( { error }) {\n    return <div className='error'>\n        <h1 className='error__heading'>Sorry, an error occurred...</h1>\n        <p className='error__text'>{error.message}</p>\n    </div>;\n}","export default function Endpoint ({ memberName, memberDescription, id}) {\n    let backgroundColorClass; \n    if (id%2 === 0) {\n        //0dd element. Index start at 0 so the first element is 0 and so on. \n        backgroundColorClass = '--odd';\n    }\n\n    return (\n        <li className ={`tree__endpoint ${backgroundColorClass}`}>\n            <h4 className='heading__endpoint'>{memberName}</h4>\n            <p className='description__endpoint'>{memberDescription}</p>\n        </li>\n    );\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\n\nexport default function InputLabel({inputType, labelId, labelText }) {\n    return (   \n        <label className = 'input__label' htmlFor = {labelId} >\n            <span className = {`input__button --${inputType}`}>\n                <FontAwesomeIcon icon ={faPlus} className = 'input__icon-plus'/>\n                <FontAwesomeIcon icon = {faMinus} className = 'input__icon-minus'/>\n            </span>\n            {labelText}\n        </label> \n    );\n}\n","import MembersContainer from './MembersContainer';\nimport InputLabel from './InputLabel';\n\nexport default function NodeRender( {parentLabel, inputType, groupName, groupMembers, groupId, groupDescription } ) {\n    let labelId = `${parentLabel}-${groupName}-${groupId}`;\n\n    const labelText = <h4 className='heading__node'>{groupName}</h4>;\n\n    return (\n        <li className ='tree__node'>\n            <input type={inputType} id={labelId} name = {parentLabel} className = 'input'/>\n            <InputLabel inputType = {inputType} labelId = {labelId} labelText={labelText}/>\n            <p className='description__node' >{groupDescription}</p>\n            <MembersContainer members = { groupMembers } parentLabel = {labelId} />\n            <div className = 'vertical-line'></div>\n        </li>\n    );\n}","export default function findInputType(groupType) { \n    if (groupType === 'checkbox group') {\n        return 'checkbox';\n    } else if (groupType === 'radio group') {\n        return 'radio';\n    } else {\n        throw new Error('Wrong group type!');\n    }\n}\n","import Endpoint from './Endpoint'; \nimport NodeRender from './NodeRender';\n\nimport findInputType from './findInputType';\n\nexport default function MembersContainer({ members, parentLabel}) {\n    const membersContainer = members.map((member, id) => {\n        if (member.type === 'endpoint') {\n            return < Endpoint \n                key={id} \n                id = {id}\n                memberName = {member.name} \n                memberDescription = {member.description}/>;\n        } else {\n            let inputTypeValue = findInputType(member.type);\n            return <NodeRender \n                parentLabel ={parentLabel}\n                key={id}\n                inputType = {inputTypeValue} \n                groupName = {member.name}\n                groupDescription = {member.description}\n                groupMembers = {member.members}\n                groupId = {id} />;\n        }\n    });\n\n    return (\n        <ul>\n            {membersContainer}\n        </ul>\n    );\n}","import MembersContainer from './MembersContainer';\nimport InputLabel from './InputLabel';\n\nimport findInputType from './findInputType';\n\nexport default function TreeRender({tree}) {\n    let labelId = `tree-${tree['tree title']}`;\n    const descriptionContainer = tree['multi-line description'].map((description, id) => {\n        return <p className = 'description__title' key = {id}>{description}</p>;\n    }); \n    let inputType = findInputType(tree.type); \n\n    let labelText = <h1 className='heading__primary'>{tree['tree title']}</h1>;\n\n    return (\n        <div className = 'tree'>\n            <input type={inputType} id={labelId} name = {tree.name} className = 'input'/>\n            <InputLabel parentLabel = {labelId} inputType = {inputType} labelId = {labelId} labelText = {labelText}/>\n            {descriptionContainer}\n            <MembersContainer  members={tree.members}  parentLabel={labelId}/>\n            <div className = 'vertical-line'></div>\n        </div>\n    );\n}","import { useState, useEffect } from 'react';\n\n//React loader import \nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport fetchData from './components/fetchData';\nimport ErrorMessage from './components/ErrorMessage';\nimport TreeRender from './components/TreeRender';\n\nimport './scss/App.scss';\n\nfunction App() {\n    const [errorMessage, setError] = useState(null);\n    const [listTree, setListTree] = useState(undefined);\n\n    const handleError = (error) => {\n        setError(error);\n    };\n\n    useEffect(() => {\n        if (listTree === undefined) {\n            fetchData().then(response => setListTree(response))\n                .catch(error => handleError(error));\n        }\n    }, [listTree]);\n\n\n    if ( errorMessage )  {\n        return (\n            <ErrorMessage error = {errorMessage} />\n        );\n    }\n\n    else if (listTree === undefined) {\n        return (\n            <Loader \n                className = 'flex-center'\n                type=\"Oval\"\n                color=\"#2998ff\"\n                height={50}\n                width={50}\n                timeout={3000} //3 secs\n            />\n        );\n    }\n    \n    return (\n        <div className=\"App\">\n            <TreeRender tree={listTree}/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}